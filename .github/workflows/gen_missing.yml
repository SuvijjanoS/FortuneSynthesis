name: Generate missing WanNianLi years
on: workflow_dispatch          # run manually from the Actions tab

# give this job permission to push back to the repo
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # --- checkout repo ---
    - uses: actions/checkout@v4

    # --- install build tools & jq ---
    - name: Install deps
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential jq curl

    # --- clone + build ccalendar (fast, no deps) ---
    - name: Build ccalendar
      run: |
        git clone --depth 1 https://github.com/liweitianux/ccalendar.git
        make -C ccalendar

    # --- generate gap JSON for 1800-1899 & 2101-2300 ---
    - name: Generate gap JSON
      run: |
        mkdir -p data/gen
        echo '[' > data/gen/gap.json
        first=1
        for y in $(seq 1800 1899) $(seq 2101 2300); do
          for m in $(seq 1 12); do
            # ask ccalendar how many days this month has
            days=$(./ccalendar/ccalendar --gregorian "$y-$m-01" --month-days)
            for d in $(seq 1 $days); do
              gdate=$(printf "%04d-%02d-%02d" $y $m $d)
              row=$(./ccalendar/ccalendar --gregorian "$gdate" --output json)
              [ $first -eq 1 ] && first=0 || echo ',' >> data/gen/gap.json
              echo "$row" >> data/gen/gap.json
            done
          done
        done
        echo ']' >> data/gen/gap.json

    # --- convert all existing CSVs (HKO & CWA) to JSON ---
    - name: Convert official CSV → JSON
      run: |
        node <<'NODE'
        const fs = require('fs');
        const csv = require('csv-parse/sync');
        const path = require('path');

        let rows = [];

        // HKO yearly CSVs
        if (fs.existsSync('data/hko')) {
          fs.readdirSync('data/hko').forEach(f => {
            const txt = fs.readFileSync(path.join('data/hko', f), 'utf8');
            rows.push(...csv.parse(txt, { columns: true, skip_empty_lines: true }));
          });
        }

        // CWA master CSV
        if (fs.existsSync('data/cwa/cwa.csv')) {
          const txt = fs.readFileSync('data/cwa/cwa.csv', 'utf8');
          rows.push(...csv.parse(txt, { columns: true, skip_empty_lines: true }));
        }

        fs.mkdirSync('data/gen', { recursive: true });
        fs.writeFileSync('data/gen/official.json', JSON.stringify(rows));
        NODE

    # --- merge gap + official → master JSON (normalise fields) ---
    - name: Merge to 1800-2300 JSON
      run: |
        node <<'NODE'
        const fs = require('fs');
        const gap  = JSON.parse(fs.readFileSync('data/gen/gap.json','utf8'));
        const off  = JSON.parse(fs.readFileSync('data/gen/official.json','utf8'));

        const map = {};   // key = gregorian_date

        function norm(r) {
          return {
            gregorian_date: r.gregorian_date || r['公曆日期'] || r['Gregorian'] || r['日期'],
            lunar_year_gz : r.lunar_year_gz  || r['農曆干支年'] || r['lunar_year_gz'] || r['干支年'],
            lunar_month   : r.lunar_month    || r['農曆月']    || r['lunar_month'],
            lunar_day     : r.lunar_day      || r['農曆日']    || r['lunar_day']
          };
        }

        [...gap, ...off].forEach(r => {
          const n = norm(r);
          if (n.gregorian_date) map[n.gregorian_date] = n;  // official rows overwrite
        });

        const merged = Object.values(map)
          .sort((a,b)=>a.gregorian_date.localeCompare(b.gregorian_date));

        fs.writeFileSync('data/wanianli_1800_2300.json', JSON.stringify(merged));
        console.log(`Merged ${merged.length} days`);
        NODE

    # --- commit & push ---
    - name: Commit merged file
      run: |
        git config user
